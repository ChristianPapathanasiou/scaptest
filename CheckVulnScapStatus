### Function to check and report Scap Vulnerabilities Audit
CheckVulnScapStatus() {
	HOSTNAME=`/bin/hostname -s`

	### Run the test, capturing the result
	# Warn range is 48 hours, Crit range is 96 hours
	AGE_RESULT=`${PLUGINDIR}/check_file_age -w 172800 -c 345600 /var/cache/scaptest/VulnScapLastRun.txt`
	AGE_STATUS=`echo $AGE_RESULT | cut -d " " -f 2 | cut -d: -f 1` # strips out the status of the result - state

	# Strip out just the data portion of the result - details
	AGE_RESULT=`echo "${AGE_RESULT}" | cut -f2- -d:`

	### if the status is not ok exit
	if [ $AGE_STATUS != "OK" ]
	then
		### State final status result
		if [ ${AGE_STATUS} == "CRITICAL" ]; then
			STATUS=2 # or CRIT
		elif [ ${AGE_STATUS} == "WARNING" ]; then
			STATUS=1 # or WARN
		else
			STATUS=0 # or OK
		fi

		# exit the program and report to nagios just the age problem
		${LOGGER} -t "${LOGGER_TAG}" "CheckVulnScapStatus: ${HOSTNAME} ${STATUS} ${AGE_RESULT}"
		DATA="${DATA}
${HOSTNAME} CheckVulnScapStatus ${STATUS} ${AGE_RESULT}"

	else
		CRIT=0 # var to store crit ocurrences
		WARN=0 # var to store warn ocurrences

		# Gets the full report from the audit
		RESULTLINE=$(head -n 1 /var/cache/scaptest/VulnScapLastRun.txt)

		### See if there are failures indicated in the log
		FAILURES=`grep -o -P '(?<=Score ).*(?=Vulnerabilities)' \
			/var/cache/scaptest/VulnScapLastRun.txt`

		CRIT_CVES=`grep -o -P '(?<=CVEs: ).*(?=-fail)' \
			/var/cache/scaptest/VulnScapLastRun.txt`

		### Parameters to declare the status of the system acquired from the config file
		warn_treshold=`grep -oP '(?<=vuln_default_warn = ).*' \
			/etc/scaptest/CheckScapStatus.cfg`
		crit_treshold=`grep -oP '(?<=vuln_default_crit = ).*' \
			/etc/scaptest/CheckScapStatus.cfg`

		# Assign default value in case variables are empty
		if [ -z ${warn_treshold} ]; then
			warn_treshold=2
		fi

		if [ -z ${crit_treshold} ]; then
			crit_treshold=5
		fi

		### Comparing the results and returning a status
		if [ ${FAILURES} -ge ${crit_treshold} ]; then
			((CRIT++)) # or CRIT
		elif [ ${FAILURES} -ge ${warn_treshold} ]; then
			((WARN++)) # or WARN
		fi

		### Comparing the critical cves results
		if [ ${CRIT_CVES} -gt "0" ]; then
			((CRIT++)) # or CRIT
		fi

		### State final status result
		if [ ${CRIT} -gt "0" ]; then
			STATUS=2 # or CRIT
		elif [ ${WARN} -gt "0" ]; then
			STATUS=1 # or WARN
		else
			STATUS=0 # or OK
		fi

		### Report to Nagios
		${LOGGER} -t "${LOGGER_TAG}" "CheckVulnScapStatus: ${HOSTNAME} ${STATUS} ${RESULTLINE}"
		DATA="${DATA}
${HOSTNAME} CheckVulnScapStatus ${STATUS} ${RESULTLINE}"

	fi
}
